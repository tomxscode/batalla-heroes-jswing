/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package batallaheroes;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;
/**
 *
 * @author tomas
 */
public class Combate extends javax.swing.JFrame {

    /**
     * Creates new form Combate
     */
    
    boolean enPelea = false;
    boolean prohibidoPelear = false;
    Heroe heroeActual = BatallaHeroes.heroeSeleccionado;
    Arma armaActual = heroeActual.getArma();
    
    int longitudHeroes = Heroes.heroes.length;
    int longitudArmas = Armas.armas.length;
    int idHeroe;
    
    double vidaBase = heroeActual.getSalud();
    double vidaBaseRival;

    
    Heroe heroeRival;
    Arma armaRival;
    
    public Combate() {
        initComponents();
        
        JPanelImage imagenFondo = new JPanelImage(combateBg, "imagenes/bg.jpg");
        combateBg.add(imagenFondo);
        
        // Estableciendo enPelea
        enPelea = true;
        
        // Estableciendo datos del personaje del jugador
        personaje.setText(heroeActual.getNombre());
        modificarListaUsuario();
        
        // Busqueda de rival
        int heroeRivalId = (int) (Math.random() * longitudHeroes);

        for (int i = 0; i < longitudHeroes; i++) {
            if (Heroes.heroes[i].getNombre().equals(heroeActual.getNombre())) {
                idHeroe = i;
            }
        }
        
        do {
            heroeRivalId = (int) (Math.random() * longitudHeroes);
            
            heroeRival = Heroes.heroes[heroeRivalId];
            int armaRandom = (int) (Math.random() * longitudArmas);
            heroeRival.setArma(Armas.armas[armaRandom]);
            armaRival = heroeRival.getArma();
            modificarListaRival();
            personajeRival.setText(heroeRival.getNombre());
            
        } while (Heroes.heroes[heroeRivalId].getNombre().equals(heroeActual.getNombre()));
        
        vidaBaseRival = heroeRival.getSalud();
        
        txtInfo.setText("--- Inicio de pelea ---\nTe enfrentarás a: " + heroeRival.getNombre() + "\n");
        agregarTextoInfo("Empiezas tú, ¿qué haras?");
    }
    
    public void agregarTextoInfo(String texto) {
        txtInfo.setText(txtInfo.getText() + texto + "\n");
    }
    
    public void modificarListaUsuario() {
        // Crear un modelo de lista vacío
        DefaultListModel<String> modeloLista = new DefaultListModel<>();

        // Asignar el modelo a la lista
        listaPersonaje.setModel(modeloLista);

        // Agregar elementos al modelo de lista
        modeloLista.addElement("Salud: " + heroeActual.getSalud());
        modeloLista.addElement("Fuerza: " + heroeActual.getFuerza());
        modeloLista.addElement("Debilidad: " + heroeActual.getDebilidad());
        modeloLista.addElement("Nivel: " + heroeActual.getNivel());
        modeloLista.addElement("Arma: " + armaActual.getNombre());
        modeloLista.addElement("Material arma: " + armaActual.getMaterial());
    }
    
    public void modificarListaRival() {
        // Crear un modelo de lista vacío
        DefaultListModel<String> modeloLista = new DefaultListModel<>();

        // Asignar el modelo a la lista
        listaRival.setModel(modeloLista);

        // Agregar elementos al modelo de lista
        modeloLista.addElement("Salud: " + heroeRival.getSalud());
        modeloLista.addElement("Fuerza: " + heroeRival.getFuerza());
        modeloLista.addElement("Debilidad: " + heroeRival.getDebilidad());
        modeloLista.addElement("Nivel: " + heroeRival.getNivel());
        modeloLista.addElement("Arma: " + armaRival.getNombre());
        modeloLista.addElement("Material arma: " + armaRival.getMaterial());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combateBg = new javax.swing.JPanel();
        volverBtn = new javax.swing.JButton();
        personaje = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPersonaje = new javax.swing.JList<>();
        personajeRival = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaRival = new javax.swing.JList<>();
        btnCombate = new javax.swing.JButton();
        btnCombate1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("COMBATE");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        combateBg.setBackground(new java.awt.Color(255, 102, 204));

        volverBtn.setBackground(new java.awt.Color(255, 51, 51));
        volverBtn.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        volverBtn.setForeground(new java.awt.Color(255, 255, 255));
        volverBtn.setText("VOLVER");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        personaje.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        personaje.setForeground(new java.awt.Color(255, 255, 255));
        personaje.setText("TU PERSONAJE");

        txtInfo.setEditable(false);
        txtInfo.setBackground(new java.awt.Color(153, 153, 153));
        txtInfo.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        txtInfo.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(txtInfo);

        jLabel2.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("COMBATIR");

        jScrollPane2.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane2.setForeground(new java.awt.Color(0, 0, 0));

        jScrollPane2.setViewportView(listaPersonaje);

        personajeRival.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        personajeRival.setForeground(new java.awt.Color(255, 255, 255));
        personajeRival.setText("RIVAL");

        jScrollPane3.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane3.setForeground(new java.awt.Color(0, 0, 0));

        jScrollPane3.setViewportView(listaRival);

        btnCombate.setBackground(new java.awt.Color(255, 51, 51));
        btnCombate.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnCombate.setForeground(new java.awt.Color(255, 255, 255));
        btnCombate.setText("ATACAR");
        btnCombate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCombateActionPerformed(evt);
            }
        });

        btnCombate1.setBackground(new java.awt.Color(0, 153, 0));
        btnCombate1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnCombate1.setForeground(new java.awt.Color(255, 255, 255));
        btnCombate1.setText("DEFENDERME");
        btnCombate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCombate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout combateBgLayout = new javax.swing.GroupLayout(combateBg);
        combateBg.setLayout(combateBgLayout);
        combateBgLayout.setHorizontalGroup(
            combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(combateBgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(combateBgLayout.createSequentialGroup()
                        .addGroup(combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(combateBgLayout.createSequentialGroup()
                                .addComponent(volverBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(combateBgLayout.createSequentialGroup()
                                .addGroup(combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(combateBgLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(personaje, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(personajeRival, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnCombate1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCombate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
        );
        combateBgLayout.setVerticalGroup(
            combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(combateBgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, combateBgLayout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addComponent(volverBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personaje, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personajeRival, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(combateBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCombate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCombate1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(combateBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(combateBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        Seleccion2 ventanaPersonajes = new Seleccion2();
        ventanaPersonajes.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_formWindowClosed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        // TODO add your handling code here:
        if (enPelea) {
            
        } else {
            Seleccion2 ventanaPersonajes = new Seleccion2();
            ventanaPersonajes.setVisible(true);
            setVisible(false);
        }
    }//GEN-LAST:event_volverBtnActionPerformed

    private void btnCombateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCombateActionPerformed
        // TODO add your handling code here:
        if (prohibidoPelear) {
            agregarTextoInfo("No puedes pelear con un muerto!");
        } else {
            List<String> outputCombate = heroeActual.atacar(heroeRival);
            for(int i = 0; i < outputCombate.size(); i++) {
                String output = outputCombate.get(i);
                agregarTextoInfo(output);
                modificarListaRival();
                if (output.equals("INFO: " + heroeActual.getNombre() + " ganó el combate!")) {
                    nivelarHeroe();
                    break;
                } 
            }
            if (enPelea) {
                peleaNpc();
            }
            modificarListaUsuario();
            modificarListaRival();
        }
    }//GEN-LAST:event_btnCombateActionPerformed

    private void nivelarHeroe() {
        agregarTextoInfo("***************");
        agregarTextoInfo("Subes este héroe de nivel!");
        heroeActual.setNivel(heroeActual.getNivel() + 1);
        heroeActual.setSalud((vidaBase) * 1.2);
        heroeActual.setFuerza((heroeActual.getFuerza()) * 1.2);
        heroeActual.setDefensa((heroeActual.getDefensa()) + 0.1);
        heroeRival.setSalud(vidaBaseRival);
        enPelea = false;
        heroeActual = Heroes.heroes[idHeroe];
        modificarListaUsuario();
        agregarTextoInfo("Actualizando información..., presiona volver para continuar");
        prohibidoPelear = true;
    }
    
    private void btnCombate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCombate1ActionPerformed
        // TODO add your handling code here:
        if (prohibidoPelear) {
            agregarTextoInfo("No estás autorizado a pelear");
        } else {
            heroeActual.defender();
            agregarTextoInfo("INFO: Decides defenderte");
            peleaNpc();
            modificarListaUsuario();
            modificarListaRival();
        }
        
    }//GEN-LAST:event_btnCombate1ActionPerformed

    public void peleaNpc() {
        if (enPelea) {
            Random rand = new Random();
            int accion = rand.nextInt(2) + 1;;
            if (accion == 1) { // defensa
                heroeRival.defender();
                agregarTextoInfo("RIVAL: " + heroeRival.getNombre() + " decidió defenderse!");
            } else {
                List<String> outputCombateRival = heroeRival.atacar(heroeActual);
                for (int y = 0; y < outputCombateRival.size(); y++) {
                    String outputRival = outputCombateRival.get(y);
                    agregarTextoInfo(outputRival);
                    if (outputRival.equals("INFO: " + heroeRival.getNombre() + " ganó el combate!")) {
                        agregarTextoInfo("INFO: Perdiste el combate");
                        enPelea = false;
                        prohibidoPelear = true;
                        heroeRival.setSalud(vidaBaseRival);
                        heroeActual.setSalud(vidaBase);
                    }
                }
                modificarListaRival();
                modificarListaUsuario();
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Combate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Combate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Combate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Combate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Combate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCombate;
    private javax.swing.JButton btnCombate1;
    private javax.swing.JPanel combateBg;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listaPersonaje;
    private javax.swing.JList<String> listaRival;
    private javax.swing.JLabel personaje;
    private javax.swing.JLabel personajeRival;
    private javax.swing.JTextPane txtInfo;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables
}
